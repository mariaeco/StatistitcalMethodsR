panel.border = element_rect(linetype = "solid", fill = NA))
bxp2 <- ggplot(df, aes( x = as.factor(dias), y = ninfas, color = fator2))+
geom_boxplot()+
xlab("Tempo")+
ylab("Ninfas (Nº/m)")+
labs(color = "Fator 2")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
grid.arrange(bxp1,bxp2, nrow=2)
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
within = .(fator1, fator2, time),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE   # Resultados detalhados, incluindo teste de esfericidade
)
# ============================== ANOVA COM MEDIDAS REPETIDAS 1 ====================================
library(ez)
df$ninfas_log = log(df$ninfas+2)
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
within = .(fator1, fator2, time),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE   # Resultados detalhados, incluindo teste de esfericidade
)
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
within = .(fator1, fator2, dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE   # Resultados detalhados, incluindo teste de esfericidade
)
print(results)
df$fator1 = as.factor(df$fator1)
df$fator1
df$fator2
df$fator2 = as.factor(df$fator2)
df$dias = as.factor(df$dias)
df$dias
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
within = .(fator1, fator2, dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE   # Resultados detalhados, incluindo teste de esfericidade
)
print(results)
results <- ezANOVA(
data = df,
dv = .(ninfas),    # Variável dependente
wid = .(id),      # Identificador do sujeito
within = .(fator1, fator2, dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE   # Resultados detalhados, incluindo teste de esfericidade
)
results <- ezANOVA(
data = df,
dv = .(ninfas),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2)
within = .(dias),  # Fator intra-sujeito
results <- ezANOVA(
data = df,
dv = .(ninfas),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2),
within = .(dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE   # Resultados detalhados, incluindo teste de esfericidade
)
print(results)
print(results)
results <- ezANOVA(
data = df,
dv = .(ninfas),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2),
within = .(dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
return_aov = TRUE
)
print(results)
results$aov
summary(results$aov)
resid(results$aov)
residual(results$aov)
residuals(results$aov)
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2),
within = .(dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
return_aov = TRUE
)
print(results)
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2),
within = .(dias/blocos),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
return_aov = TRUE
)
print(results$ANOVA)
print(results$ANOVA,results$`Mauchly's Test for Sphericity`)
results$`Mauchly's Test for Sphericity`
print(results)
results <- ezANOVA(
data = df,
dv = .(ninfas),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2),
within = .(dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
return_aov = TRUE
)
print(results)
summary(results$aov)
df$ninfas_log = log(df$ninfas+2)
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2),
within = .(dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
return_aov = TRUE
)
print(results)
summary(results$aov)
# Ajuste do modelo linear
model <- aov(ninfas_log ~ fator1+fator2 +dias + Error(id/dias), data = df)
summary(model)
# Ajuste do modelo linear
model <- aov(ninfas_log ~ fator1*fator2*dias + Error(id/dias), data = df)
summary(model)
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2),
within = .(dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
return_aov = TRUE
)
print(results)
summary(results$aov)
# Ajuste do modelo linear
model <- aov(ninfas_log ~ fator1*fator2*dias + Error(id/dias), data = df)
summary(model)
print(results)
summary(model)
results <- ezANOVA(
data = df,
dv = .(ninfas_log),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(fator1, fator2),
within = .(dias),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
)
print(results)
# Ajuste do modelo linear
model <- aov(ninfas_log ~ fator1*fator2*dias + Error(id/dias), data = df)
summary(model)
# ===============================================================================================
#
# REPEATED MEASURE ANOVA
# ===============================================================================================
#pacotes necessarios
library(tidyverse)#summarise
library(ggpubr)#ggboxplot
library(rstatix)#Vget_summary_stats
library(ggplot2)
library(gridExtra)#gridarrange boxplot
df = read.table("clipboard", header = T)
head(df)
#defining factors
df$fator1 = as.factor(df$fator1)
#defining factors
df$peixe = as.factor(df$peixe)
df$nutriente = as.factor(df$nutriente)
df$tempo = as.factor(df$tempo)
#tendencia geral
dfstats<- df  %>%
group_by(peixe,nutriente,tempos) %>%
get_summary_stats(fito, type = "mean_sd")
#tendencia geral
dfstats<- df  %>%
group_by(peixe,nutriente,tempo) %>%
get_summary_stats(fito, type = "mean_sd")
dfstats
#normalidade
dfnorm <- df %>%
group_by(peixe,nutriente) %>%
shapiro_test(ninfas)
#normalidade
dfnorm <- df %>%
group_by(peixe,nutriente) %>%
shapiro_test(fito)
dfnorm
# ================================ PLOT =========================================================
bxp1 <- ggplot(df, aes( x = tempo, y = fito, color = peixe))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Peixe")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
# ================================ PLOT =========================================================
ggplot(df, aes( x = tempo, y = fito, color = peixe))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Peixe")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
grid.arrange(bxp1,bxp2, nrow=2)
bxp2 <- ggplot(df, aes( x = tempo, y = fito, color = nutriente))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Nutriente")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
grid.arrange(bxp1,bxp2, nrow=2)
bxp2 <- ggplot(df, aes( x = tempo, y = fito, color = nutriente*peixe))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Nutriente")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
grid.arrange(bxp1,bxp2, nrow=2)
bxp2 <- ggplot(df, aes( x = tempo, y = fito, color = nutriente))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Nutriente")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
rbindlist(list(df$peixe,df$nutriente))
install.packages("data.table")
library(data.table) #to combine factors
rbindlist(list(df$peixe,df$nutriente))
rbindlist(list(data.frame(df$peixe),data.frame(df$nutriente)))
rbind(df$peixe, df$nutriente)
df$peixe
unlist(list(df$peixe, df$nutriente))
paste(df$peixe, df$nutriente)
df$all_trats = paste(df$peixe,"", df$nutriente)
df$all_trats
?paste
df$all_trats = paste(df$peixe, df$nutriente, sep = "")
?paste
df$all_trats
ggplot(df, aes( x = tempo, y = fito, color = all_trats))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Tratamentos")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
#ordenar NIVEIS
df$all_trats <- factor(df$all_trats, levels = c("CO","O0", "Z0","CN","ON","ZN"))
ggplot(df, aes( x = tempo, y = fito, color = all_trats))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Tratamentos")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
#ordenar NIVEIS
df$all_trats <- factor(df$all_trats, levels = c("C0","O0", "Z0","CN","ON","ZN"))
ggplot(df, aes( x = tempo, y = fito, color = all_trats))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Tratamentos")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
df$all_trats
#ordenar NIVEIS
df$all_trats <- factor(df$all_trats, levels = c("C0", "O0", "Z0", "CN", "ON", "ZN"))
ggplot(df, aes( x = tempo, y = fito, color = all_trats))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Tratamentos")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
df$all_trats
df = read.table("clipboard", header = T)
head(df)
df$all_trats = paste(df$peixe, df$nutriente, sep = "")
df$all_trats
df$all_trats = as.factor(paste(df$peixe, df$nutriente, sep = ""))
df$all_trats
#ordenar NIVEIS
df$all_trats <- factor(df$all_trats, levels = c("C0", "O0", "Z0", "CN", "ON", "ZN"))
ggplot(df, aes( x = tempo, y = fito, color = all_trats))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Tratamentos")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
df$tempo = as.factor(df$tempo)
ggplot(df, aes( x = tempo, y = fito, color = all_trats))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Tratamentos")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
ggplot(df, aes( x = tempo, y = fito, fill = all_trats))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(fill = "Tratamentos")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
grid.arrange(bxp1,bxp2, nrow=2)
results <- ezANOVA(
data = df,
dv = .(fito),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(peixe, nutriente),
within = .(tempo),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
return_aov = TRUE
)
df = read.table("clipboard", header = T)
head(df)
#defining factors
df$peixe = as.factor(df$peixe)
df$nutriente = as.factor(df$nutriente)
df$tempo = as.factor(df$tempo)
df$all_trats = as.factor(paste(df$peixe, df$nutriente, sep = ""))
df$all_trats
#ordenar NIVEIS
df$all_trats <- factor(df$all_trats, levels = c("C0", "O0", "Z0", "CN", "ON", "ZN"))
ggplot(df, aes( x = tempo, y = fito, fill = all_trats))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(fill = "Tratamentos")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
# ============================== ANOVA COM MEDIDAS REPETIDAS 1 ====================================
library(ez)
results <- ezANOVA(
data = df,
dv = .(fito),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(peixe, nutriente),
within = .(tempo),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
return_aov = TRUE
)
print(results)
results <- ezANOVA(
data = df,
dv = .(fito),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(peixe, nutriente),
within = .(tempo),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
)
print(results)
summary(results$aov)
print(results)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(id/tempo), data = df)
summary(model)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(id/peixe), data = df)
summary(model)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(1/tempo), data = df)
summary(model)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(dias/tempo), data = df)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(id/tempo), data = df)
summary(model)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(tempo), data = df)
summary(model)
df = read.table("clipboard", header = T)
head(df)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(id/tempo), data = df)
summary(model)
#defining factors
df$peixe = as.factor(df$peixe)
df$nutriente = as.factor(df$nutriente)
df$tempo = as.factor(df$tempo)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(id/tempo), data = df)
summary(model)
df$id = as.factor(df$id)
results <- ezANOVA(
data = df,
dv = .(fito),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(peixe, nutriente),
within = .(tempo),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
)
print(results)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(id/tempo), data = df)
summary(model)
df = read.table("clipboard", header = T)
head(df)
#defining factors
df$peixe = as.factor(df$peixe)
df$nutriente = as.factor(df$nutriente)
df$tempo = as.factor(df$tempo)
df$id = as.factor(df$id)
#tendencia geral
dfstats<- df  %>%
group_by(peixe,nutriente,tempo) %>%
get_summary_stats(fito, type = "mean_sd")
dfstats
#normalidade
dfnorm <- df %>%
group_by(peixe,nutriente) %>%
shapiro_test(fito)
dfnorm
# ================================ PLOT =========================================================
bxp1 <- ggplot(df, aes( x = tempo, y = fito, color = peixe))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Peixe")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
bxp2 <- ggplot(df, aes( x = tempo, y = fito, color = nutriente))+ #color= fator1 ao inves de fill tbm fica bacana
geom_boxplot()+
xlab("Tempo")+
ylab("Fitoplancton")+
labs(color = "Nutriente")+
theme(axis.text.x=element_text(angle = 0),
panel.background = element_rect(fill = "white", colour = "white"),
panel.border = element_rect(linetype = "solid", fill = NA))
grid.arrange(bxp1,bxp2, nrow=2)
results <- ezANOVA(
data = df,
dv = .(fito),    # Variável dependente
wid = .(id),      # Identificador do sujeito
between = .(peixe, nutriente),
within = .(tempo),  # Fator intra-sujeito
type = 3,         # Tipo de soma de quadrados
detailed = TRUE,   # Resultados detalhados, incluindo teste de esfericidade
)
print(results)
# Ajuste do modelo linear
model <- aov(fito ~ peixe*nutriente*tempo + Error(id/tempo), data = df)
summary(model)
setwd("C:/Users/maria/Desktop/MeuGit/StatistitcalMethodsR/RM_ANOVA")
df = read.table("data_peryphyton.txt", header = T)
head(df)
#defining factors
df$snails = as.factor(df$snails)
df$nutrient = as.factor(df$nutrient)
df$time = as.factor(df$time)
#tendencia geral
dfstats<- df  %>%
group_by(snails,nutrient,time) %>%
get_summary_stats(peryphyton_growth, type = "mean_sd")
dfstats
#normalidade
dfnorm <- df %>%
group_by(snails,nutrient) %>%
shapiro_test(peryphyton_growth)
dfnorm
dfnorms
